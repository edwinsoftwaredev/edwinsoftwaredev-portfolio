@import url('https://fonts.googleapis.com/css?family=Fira+Code&display=swap');

.principal-container {
    height: 100vh;
    display: flex;
}

.left-container .first-left-container {
    width: 100%;
    position: absolute;
    margin: auto !important;
    display: flex;
    height: 100%;
    transform: skewX(8deg);
}

.title {

    ~ p {
        margin-left: 3px;
        margin-top: 15px !important;
        font-size: 18pt;
        color: #b6ffff !important;
    }
}

.menu {
    z-index: 1;
    margin: auto 0 auto 17px;
    min-width: fit-content;
    max-width: fit-content;
    opacity: 0;
    transform: translateX(0vw);
    transition: ease-out 250ms;
    animation-delay: 250ms;
    animation-fill-mode: forwards;
    float: left;
    background-color: rgba(0, 0, 0, 0.6);
}

.menu ul {
    margin: 0 !important;
}

.menu ul li span {
    vertical-align: baseline;
    line-height: 30pt;
    margin-right: 15px;
    color: #b6ffff;
}

.menu ul li button {
    font-family: 'Fira Code', monospace;
    font-size: 16pt;
    text-transform: capitalize;
}

.menu ul li button:hover {
    font-weight: 999;
}

.menu button {
    color: white;
}

.menu button:focus {
    font-weight: 999 !important;
}

.menu button::before {
    border-bottom: 3px solid #81d4fa !important;    
}

.menu button:hover::before {
    border-bottom: 3px solid #81d4fa !important;
}

.left-container {
    background-color: #1b1b1b;
    transform: translateX(-40vw) skewX(-8deg);
    width: 60vw;
    transform-origin: top right !important;
    transition: ease-in 180ms;
    transition-delay: 400ms;
    overflow: hidden;
    display: flex;
}

.principal-container:hover .left-container:not(:hover) {
    transform: translateX(-40vw) skewX(-8deg);
    transition: ease-out 220ms;
    transition-delay: 400ms;
}

.left-container:hover:not(.menu) {
    transform: translateX(0vw) skewX(-8deg);
    transition: ease-in 180ms;
    transition-delay: 150ms;
}

.left-container:hover .menu {
    opacity: 1;
    transform: translateX(5vw) !important;
    transition: ease-in 180ms;
    transition-delay: 300ms;
}

.route-selected-button {
    font-weight: 999 !important;
}

// border bottom when route selected
.route-selected-button::before {
    border-bottom: 3px solid #81d4fa !important;
    right: 0 !important;
}

// when route is in "home" set this classes and replace by importance some attributes of base classes
////////////////////////////////////////////////////////////////////////////////////
.animation-stop {
    animation: none !important;

    // as the parent class is added after some time we need to set this after the initial animation 
    .menu-home {
        opacity: 1;
        pointer-events: all !important;
    }

    .option-description-home {
        transform: translateX(7vw) translateY(0%) !important;
        opacity: 1;
        pointer-events: all !important;
    }

    .square-home {
        opacity: 0.85;
    }

    // check nesting scss
    //https://css-tricks.com/the-sass-ampersand/

    &.principal-container {
        transition: 350ms ease-in;
        background-color: #dadada;
    }
}

@keyframes init-background-color {
    from { 
        background-color: #1b1b1b;
    }

    to {
        background-color: #dadada;
    }
}

.left-container-home {
    transform: translateX(0vw) skewX(-8deg) !important;
    transition: none !important;
    pointer-events: none !important;
    animation: init-ani-left-container 400ms cubic-bezier(0.55, 0.085, 0.68, 0.53) forwards;
}

@keyframes init-ani-left-container {
    0% {
        transform: translateX(-40vw) skewX(-8deg);
    }

    100% {
        transform: translateX(0vw) skewX(-8deg);
    }
}

.menu-home {
    transform: translateX(5vw) !important;
    animation: init-menu-home 180ms ease-in forwards;
    animation-delay: 500ms !important;
    pointer-events: none !important;
}

@keyframes init-menu-home {
    from {
        opacity: 0;
        transform: translateX(0vw);
    }

    to {
        opacity: 1;
        transform: translateX(5vw);
        position: relative;
    }
}

.option-description-home {
    animation: init-desc 200ms ease-in forwards;
    animation-delay: 800ms !important;
    transition: none !important;
    pointer-events: none !important;
}

@keyframes init-desc {
    from {
        opacity: 0;
        transform: translateX(7vw) translateY(3%);
    }

    to {
        opacity: 1;
        transform: translateX(7vw) translateY(0%);
    }
}

.square-home {
    transition-duration: 500ms !important;
}

.square-wait-container-home {
    opacity: 0 !important;
    transition: none !important;
}

.principal-container-home {
    background-color: rgba(34,34,34,.15) !important;
    // animation: init-background-color 950ms ease-in forwards;
    // animation-delay: 100ms;
}

///////////////////////////////////////////////////////////////////////////////////

@keyframes menu-in {
    100% {
        position: relative;
    }
}

@keyframes menu-out {
    100% {
        position: relative;
    }
}

.option-description {
    opacity: 0;
    transform: translateX(7vw) translateY(3%);
    margin: auto 0 !important;
    width: 30vw;
    float: left;
    pointer-events: all;
    transition: ease-out 150ms;
    transition-delay: 100ms;
}

.left-container:hover .option-description {
    transform: translateX(7vw) translateY(0%);
    opacity: 1;
    transition: ease-in 220ms;
    transition-delay: 600ms;
}

.option-description p { 
    margin: 0 !important;
    color: lightgray;
}

// no definitive
.option-description h1 {
    color: white;
    font-weight: 700;
    text-align: left;
}

.square-container {
    transform: skewX(8deg);
    position: fixed;
    z-index: -1;
    height: 100%;
    width: 100%;
    display: flex;
}

.square {
    transform: translateX(1vw) rotate(45deg);
    margin: auto !important;
    box-shadow:
    inset 0 0 2px 6vw hsl(199, 42%, 14%),
    0 0 2px 1vw hsl(199, 52%, 24%),
    0 0 2px 2vw hsl(199, 62%, 34%),
    0 0 2px 3vw hsl(199, 72%, 44%),
    0 0 2px 5vw rgb(42, 173, 234);
    height: 25vw !important; // See this. Both properties use the same measure regardless of whether one is tall and the other wide.
    width: 25vw !important;
    z-index: -1;
    opacity: 0;
    transition: ease-in 300ms;
    transition-delay: 250ms;
    animation: leveling 3s linear, rotate-square 350s;
    animation-iteration-count: infinite;
}

@keyframes rotate-square {
    from {
        transform: translateX(1vw) rotate(45deg);
    }

    to {
        transform: translateX(1vw) rotate(405deg);
    }
}

@keyframes leveling {
    0% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 24%),
        0 0 2px 2vw hsl(199, 62%, 34%),
        0 0 2px 3vw hsl(199, 72%, 44%),
        0 0 2px 5vw hsl(199, 82%, 55%);
    }

    13% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 25%),
        0 0 2px 2vw hsl(199, 62%, 34%),
        0 0 2px 3vw hsl(199, 72%, 44%),
        0 0 2px 5vw hsl(199, 82%, 54%);
    }

    25% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 26%),
        0 0 2px 2vw hsl(199, 62%, 34%),
        0 0 2px 3vw hsl(199, 72%, 44%),
        0 0 2px 5vw hsl(199, 82%, 54%);
    }

    38% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 25%),
        0 0 2px 2vw hsl(199, 62%, 35%),
        0 0 2px 3vw hsl(199, 72%, 44%),
        0 0 2px 5vw hsl(199, 82%, 54%);
    }

    50% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 24%),
        0 0 2px 2vw hsl(199, 62%, 36%),
        0 0 2px 3vw hsl(199, 72%, 44%),
        0 0 2px 5vw hsl(199, 82%, 54%);
    }

    63% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 24%),
        0 0 2px 2vw hsl(199, 62%, 35%),
        0 0 2px 3vw hsl(199, 72%, 45%),
        0 0 2px 5vw hsl(199, 82%, 54%);
    }

    75% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 24%),
        0 0 2px 2vw hsl(199, 62%, 34%),
        0 0 2px 3vw hsl(199, 72%, 46%),
        0 0 2px 5vw hsl(199, 82%, 54%);
    }

    88% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 24%),
        0 0 2px 2vw hsl(199, 62%, 34%),
        0 0 2px 3vw hsl(199, 72%, 45%),
        0 0 2px 5vw hsl(199, 82%, 55%);
    }

    100% {
        box-shadow:
        inset 0 0 2px 6vw hsl(199, 42%, 14%),
        0 0 2px 1vw hsl(199, 52%, 24%),
        0 0 2px 2vw hsl(199, 62%, 34%),
        0 0 2px 3vw hsl(199, 72%, 44%),
        0 0 2px 5vw hsl(199, 82%, 56%);
    }
}

.left-container:hover .square {
    opacity: 0.85;
    transition: ease-in 300ms;
    transition-delay: 350ms;
}

.square-wait-container {
    opacity: 0;
    position: absolute;
    display: flex;
    width: 20vw !important;
    height: 20vh;
    top: 40vh;
    pointer-events: none;
    transition: ease-out 200ms;
}

.left-container:not(:hover) ~ .square-wait-container {
    opacity: 1;
    transition: ease-in 250ms;
    transition-delay: 850ms;
}

.left-container:not(:hover) ~ .square-wait-container .square-wait {
    transform: scale(1) rotate(405deg);
    transition: ease-in 300ms;
    animation-name: square-blink;
    animation-duration: 1.5s;
    animation-direction: normal;
    animation-iteration-count: infinite;
    animation-delay: 850ms;
}

.left-container:not(:hover) ~ .square-wait-container .square-wait-first {
    transform: scale(1) rotate(225deg);
    transition: ease-in 600ms;
    animation-name: square-blink;
    animation-duration: 1.5s;
    animation-direction: normal;
    animation-iteration-count: infinite;
    animation-delay: 1250ms;
}

.square-wait {
    opacity: 1;
    margin: auto;
    display: flex;
    transform: scale(0.5) rotate(45deg);
    max-width: 50px;
    max-height: 50px;
    min-width: 50px;
    min-height: 50px;
    border: 3px solid hsl(199, 92%, 74%);
    z-index: 2;
    pointer-events: none;
    transition: ease-in 300ms;
}

.square-wait-first {
    opacity: 1;
    transform: scale(0.5) rotate(45deg);
    max-width: 90px;
    max-height: 90px;
    width: 90px;
    height: 90px;
    margin: auto;
    border: 3px solid hsl(199, 92%, 74%);
    box-shadow: inset 0 0 10px 10px rgba(150, 215, 245, 0.45);
    z-index: 2;
    pointer-events: none;
    transition: ease-in 300ms;
}

@keyframes square-blink {
    from {
        opacity: 1;
    }

    to {
        opacity: 0;
    }
}

.square-wait-container span {
    color: white;
    margin: auto;
    opacity: 1 !important;
}

// Right container
.right-container {
    position: fixed;
    width: 80vw;
    height: 100%;
    transform: translateX(60vw);
    transform-origin: top left;
    transition: ease-in 180ms;
    transition-delay: 150ms;
}

.principal-container:not(.principal-container-home):not(:hover) .right-container {
    transform: translateX(20vw);
    transition: ease-out 220ms;
    transition-delay: 400ms;
}

.right-container div {
    transition: none !important;
    height: 100%;
}

.right-container-home {
    transform: translateX(60vw) !important;
    transition: none;
}

// ~ is for siblings
.left-container:not(:hover) ~ .right-container {
    transform: translateX(20vw);
    transition: ease-out 220ms;
    transition-delay: 400ms;
}

.app-home-component {
    transform: skewX(-8deg) !important;
    transform-origin: top left;
    width: 100%;
    position: absolute;
    opacity: 0;
    height: 100%;
    transition: 300ms ease-in;
    z-index: 2 !important;
    box-shadow: 0 0 1px 0px #1b1b1b inset, 0 0 1px 0px rgba(34,34,34,.8);
}

// good chunk of scss code
.left-container {
    &.left-container-home:not(.animation-stop) ~ .right-container .app-home-component {
        // transition-delay: 700ms !important;
        // opacity: 1;

        // the code before doesn't work
        background-color: rgba(34,34,34,.8) !important;
        animation: opacity-home-component 400ms ease-in forwards;
        animation-delay: 350ms;
    }

    @keyframes opacity-home-component {
        from {
            opacity: 0;
        }

        to {
            opacity: 1;
        }
    }

    &.left-container-home.animation-stop ~ .right-container .app-home-component {
        transition: none !important;
        background-color: rgba(34,34,34,.8) !important;
        opacity: 1 !important;
    }

    &.animation-stop:not(.left-container-home):not(:hover) ~ .right-container .app-home-component {
        transition-duration: 200ms !important;
        transition-delay: 100ms;
        opacity: 0;
    }

    &:not(.left-container-home).animation-stop:hover ~ .right-container .app-home-component {
        transition-delay: 550ms !important;
        opacity: 1 !important;

        ~ .background {
            filter: blur(1px);
            transition: 100ms ease-in !important;
        }
    }
}

.background {
    padding: 10px;
}